<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>
<!--
/******************************************************************************
 * Vige, Home of Professional Open Source Copyright 2010, Vige, and           *
 * individual contributors by the @authors tag. See the copyright.txt in the  *
 * distribution for a full listing of individual contributors.                *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may    *
 * not use this file except in compliance with the License. You may obtain    *
 * a copy of the License at http://www.apache.org/licenses/LICENSE-2.0        *
 * Unless required by applicable law or agreed to in writing, software        *
 * distributed under the License is distributed on an "AS IS" BASIS,          *
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   *
 * See the License for the specific language governing permissions and        *
 * limitations under the License.                                             *
 ******************************************************************************/
-->
<beans>

	<!-- A simple class that is initialized by Spring -->
	<bean id="alfresco_ocr_indexer.exampleBean" class="it.vige.albopretorio.demoamp.Demo"
		init-method="init" />

	<!-- A simple module component that will be executed once. Note. this module 
		component will only be executed once, and then there will be an entry for 
		it in the Repo. So doing for example $ mvn clean install -Pamp-to-war twice 
		will only execute this component the first time. You need to remove /alf_data_dev 
		for it to be executed again. -->
	<bean id="alfresco_ocr_indexer.exampleComponent" class="it.vige.albopretorio.demoamp.DemoComponent"
		parent="module.baseComponent">
		<property name="moduleId" value="${project.artifactId}" />  <!-- See module.properties -->
		<property name="name" value="exampleComponent" />
		<property name="description" value="A demonstration component" />
		<property name="sinceVersion" value="1.0" />
		<property name="appliesFromVersion" value="1.0" />
		<property name="nodeService" ref="NodeService" />
		<property name="nodeLocatorService" ref="nodeLocatorService" />
	</bean>

    <bean id="ocr-extract" class="it.vige.albopretorio.ocr.OCRExtractAction" parent="action-executer" 
          init-method="init" depends-on="alfresco-ocr-indexer_actionResourceBundles">
        <property name="nodeService" ref="NodeService"/>
        <property name="contentService" ref="ContentService" />
        <property name="versionService" ref="VersionService" />
        <property name="transactionService" ref="TransactionService" />
        <property name="ocrTransformWorker" ref="transformer.worker.OCR" />
    </bean>
    
	<bean id="transformer.worker.OCR" class="it.vige.albopretorio.ocr.OCRTransformWorker">
        <property name="verbose" value="${ocr.output.verbose}" />
	    <property name="serverOS" value="${ocr.server.os}" />
		<property name="mimetypeService">
			<ref bean="mimetypeService" />
		</property>
		<!-- Windows: service by URL (non authenticated) -->
		<property name="executerWindows">
		    <bean name="transformer.OCR.service" class="it.vige.albopretorio.ocr.RestClient">
		        <!-- Custom parameters to include in alfresco-global.properties -->
		        <property name="url" value="${ocr.url}" />
		        <property name="commandsAndArguments">
					<map>
						<entry key=".*">
							<list>
								<value>${ocr.extra.commands}</value>
								<value>${source}</value>
								<value>${target}</value>
							</list>
						</entry>
					</map>
				</property>
		      
			</bean>
		</property>
		<!-- Linux: command line -->
		<property name="executerLinux">
			<bean name="transformer.Tesseract.Command" class="it.vige.albopretorio.util.exec.RuntimeExecCommandProcessor">
				<!-- Custom parameters to include in alfresco-global.properties -->
				<property name="commandsAndArguments">
					<map>
						<entry key=".*">
							<list>
								<value>${ocr.command}</value>
								<value>${ocr.extra.commands}</value>
								<value>${source}</value>
								<value>${ocr.output.file.prefix.command}</value>
								<value>${target}</value>
							</list>
						</entry>
					</map>
				</property>
				<!-- From original alfresco-global.properties -->
	            <property name="processProperties"> 
	               <map>
	                  <entry key="MAGICK_HOME">
	                     <value>${img.root}</value>
	                  </entry>
	                  <entry key="MAGICK_CODER_MODULE_PATH">
	                     <value>${img.coders}</value>
	                  </entry>
	                  <entry key="MAGICK_CONFIGURE_PATH">
	                     <value>${img.config}</value>
	                  </entry>
	                  <entry key="GS_LIB">
	                     <value>${img.gslib}</value>
	                  </entry>
	                  <entry key="DYLD_LIBRARY_PATH">
	                     <value>${img.dyn}</value>
	                  </entry>
	                  <entry key="LD_LIBRARY_PATH">
	                     <value>${img.dyn}</value>
	                  </entry>
	               </map>
	            </property>
	            <property name="defaultProperties">
	               <props>
	                  <prop key="options"></prop>
	               </props>
	            </property>
			</bean>
		</property>
	
        <!-- Only applies to command line -->
		<property name="checkCommand">
			<bean name="transformer.Tesseract.CheckCommand" class="org.alfresco.util.exec.RuntimeExec">
				<property name="commandsAndArguments">
					<map>
						<entry key=".*">
							<list>
								<value>${ocr.command}</value>
								<value>-version</value>
							</list>
						</entry>
					</map>
				</property>
			</bean>
		</property>
	</bean>

</beans>
